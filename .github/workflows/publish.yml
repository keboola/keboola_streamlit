name: Keboola Streamlit library test & publish pipeline
on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pre-commit

      - name: Run pre-commit checks
        run: |
          pre-commit install
          pre-commit run --all-files

      - name: Run tests
        run: |
          pytest

  publish-event-info:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      is_deploy_ready: ${{ steps.deploy_ready.outputs.is_deploy_ready }}
      is_default_branch: ${{ steps.default_branch.outputs.is_default_branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all branches from remote repository
        run: git fetch --prune --unshallow --tags -f

      - name: Get current branch name
        id: current_branch
        run: |
          if [[ ${{ github.ref }} != "refs/tags/"* ]]; then
            branch_name=${{ github.ref_name }}
            echo "branch_name=$branch_name" | tee -a $GITHUB_OUTPUT
          else
            raw=$(git branch -r --contains ${{ github.ref }})
            branch="$(echo $raw | sed "s/.*origin\///" | tr -d '\n')"
            echo "branch_name=$branch" | tee -a $GITHUB_OUTPUT
          fi

      - name: Is current branch the default branch
        id: default_branch
        run: |
          echo "default_branch"='${{ github.event.repository.default_branch }}'
          if [ "${{ github.event.repository.default_branch }}" = "${{ steps.current_branch.outputs.branch_name }}" ]; then
             echo "is_default_branch=true" | tee -a $GITHUB_OUTPUT
          else
             echo "is_default_branch=false" | tee -a $GITHUB_OUTPUT
          fi

      - name: Check if deploy is ready
        id: deploy_ready
        run: |
          if [ "${{ steps.default_branch.outputs.is_default_branch }}" = "true" ] && [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "is_deploy_ready=true" | tee -a $GITHUB_OUTPUT
          else
            echo "is_deploy_ready=false" | tee -a $GITHUB_OUTPUT
          fi

  publish:
    runs-on: ubuntu-latest
    needs:
      - test
      - publish-event-info
    if: needs.publish-event-info.outputs.is_deploy_ready == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build twine

      - name: Build the package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
